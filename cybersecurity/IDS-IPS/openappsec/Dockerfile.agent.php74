# Start with the openappsec agent image
FROM randyproxz/openappsec-agent:nginx

# Add the custom repository for PHP
RUN rm -rf /etc/apk/repositories
RUN echo "http://dl-cdn.alpinelinux.org/alpine/v3.15/main" > /etc/apk/repositories && \
   echo "http://dl-cdn.alpinelinux.org/alpine/v3.15/community" >> /etc/apk/repositories

# Update package lists
RUN apk update

# Remove any conflicting packages if already installed
RUN apk del boost icu || true

RUN apk add --no-cache \
   build-base \
   wget \
   libpng \
   libpng-dev \
   libjpeg-turbo \
   libjpeg-turbo-dev \
   freetype \
   freetype-dev \
   libzip \
   libzip-dev \
   zlib \
   zlib-dev \
   libxslt-dev \
   libxml2 \
   libxml2-dev \
   curl-dev \
   openssl-dev \
   libsodium-dev \
   oniguruma-dev \
   icu-libs \
   icu-dev \
   gettext-dev \
   bzip2-dev \
   libmemcached-dev \
   dcron \
   gcc \
   g++ \
   make \
   autoconf \
   libc-dev \
   pkgconfig \
   cmake \
   pcre-dev \
   geoip-dev \
   linux-headers \
   python3 \
   perl-dev \
   gd-dev

# Update the apk index and install php8 and php8-fpm
RUN apk add --no-cache \
   php7 \
   php7-pear \
   php7-cli \
   php7-dev \
   php7-fpm \
   php7-opcache \
   php7-mysqli \
   php7-pdo \
   php7-pdo_mysql \
   php7-pgsql \
   php7-mongodb \
   php7-mbstring \
   php7-zlib \
   php7-curl \
   php7-json \
   php7-ctype \
   php7-bcmath \
   php7-session \
   php7-soap \
   php7-gd \
   php7-intl \
   php7-gettext \
   php7-pcntl \
   php7-mcrypt \
   php7-redis \
   php7-amqp \
   php7-sodium \
   php7-sockets \
   php7-bz2 \
   php7-openssl \
   php7-fileinfo \
   php7-xdebug \
   php7-ftp \
   php7-ldap \
   php7-imagick \
   php7-memcached \
   php7-gmp \
   php7-tokenizer \
   php7-pdo_sqlite \
   php7-imap \
   php7-phar \
   php7-iconv \
   php7-zip \
   php7-common \
   php7-dom \
   php7-cgi \
   php7-xsl \
   php7-enchant \
   php7-exif \
   php7-dba \
   php7-dbg \
   php7-doc \
   php7-embed \
   php7-brotli \
   php7-litespeed \
   php7-odbc \
   php7-xml \
   php7-xmlrpc \
   php7-xmlreader \
   php7-xmlwriter \
   php7-simplexml \
   php7-pdo_dblib \
   php7-pdo_odbc \
   php7-phalcon \
   php7-pecl-apcu \
   php7-pecl-xhprof \
   php7-pecl-xhprof-assets \
   php7-pecl-uuid \
   php7-pecl-protobuf \
   php7-pecl-xdebug \
   php7-pecl-oauth \
   php7-pecl-ssh2 \
   php7-pecl-imagick-dev \
   php7-pecl-vips \
   php7-pecl-ast \
   php7-pecl-event \
   php7-pecl-timezonedb \
   php7-pecl-yaml \
   php7-pecl-zmq \
   php7-pecl-couchbase \
   php7-pecl-igbinary \
   php7-pecl-lzf

# Ensure www-data user and group exist, if not already created
RUN getent group www-data || addgroup -S www-data && \
   getent passwd www-data || adduser -S www-data -G www-data

# Ensure www-data user and group exist
RUN mkdir -p /run/php && chown -R www-data:www-data /run/php
RUN mkdir -p /var/log/php

# Copy www.conf to container
COPY ./conf/php/www.conf /etc/php7/php-fpm.d/www.conf

# Create a symbolic link so php-fpm points to php-fpmX
RUN ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm

# Download and install Composer
RUN curl -sS https://getcomposer.org/composer.phar -o /usr/local/bin/composer
RUN chmod +x /usr/local/bin/composer

# Command to run PHP-FPM
CMD ["php-fpm", "-F"]

## BUILDER ------------------------
## docker build -t randyproxz/php7.4-fpm:openappsec -f Dockerfile.agent.php74 .
## --------------------------------