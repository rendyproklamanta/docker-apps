# Start with the openappsec agent image
FROM randyproxz/openappsec-agent:nginx

# Update package lists
RUN apk update

# Remove any conflicting packages if already installed
RUN apk del boost icu || true

# Install necessary tools and dependencies
RUN apk add --no-cache \
   build-base \
   libtool \
   freetds-dev \
   libcouchbase-dev \
   imap-dev \
   libevent-dev \
   libpq-dev \
   libldap \
   openldap-dev \
   cyrus-sasl-dev \
   sqlite-dev \
   wget \
   libpng \
   libpng-dev \
   libjpeg-turbo \
   libjpeg-turbo-dev \
   freetype \
   freetype-dev \
   libzip \
   libzip-dev \
   zlib \
   zlib-dev \
   libxslt-dev \
   libxml2 \
   libxml2-dev \
   curl-dev \
   libssl3 \
   libsodium-dev \
   oniguruma-dev \
   icu-libs \
   icu-dev \
   gettext-dev \
   bzip2-dev \
   libmemcached-dev \
   dcron \
   gcc \
   g++ \
   make \
   autoconf \
   libc-dev \
   pkgconfig \
   cmake \
   pcre-dev \
   pcre2-dev \
   geoip-dev \
   linux-headers \
   python3 \
   perl-dev \
   gd-dev \
   enchant2 \
   gmp-dev \
   imap-dev \
   krb5-dev \
   krb5-libs \
   && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /usr/src

# Download and build OpenSSL 1.1.1s
RUN wget https://www.openssl.org/source/openssl-1.1.1s.tar.gz \
   && tar -xvzf openssl-1.1.1s.tar.gz \
   && cd openssl-1.1.1s \
   && ./config --prefix=/opt/build --openssldir=/opt/build shared -fPIC \
   && make -j$(nproc) \
   && make install

# Set environment variables to use the custom OpenSSL
ENV PKG_CONFIG_PATH=/opt/build/lib/pkgconfig
ENV OPENSSL_CONF=/opt/build/ssl/openssl.cnf

# Set working directory for PHP
WORKDIR /usr/src

# Install PHP from source
RUN curl -fsSL https://www.php.net/distributions/php-7.4.33.tar.gz -o php-7.4.33.tar.gz \
   && tar -xvzf php-7.4.33.tar.gz \
   && cd php-7.4.33 \
   && ./buildconf --force \
   && ./configure \
      --prefix=/usr/local/php \
      --with-config-file-path=/usr/local/php \
      --with-libdir=/usr/lib \
      --with-openssl=/opt/build \
      --enable-bcmath \
      --enable-fpm \
      --enable-soap \
      --enable-sockets \
      --enable-sysvsem \
      --enable-sysvshm \
      --enable-opcache \
      --enable-pcntl \
      --enable-soap \
      --enable-brotli \
      --enable-cli \
      --enable-common \
      --enable-intl \
      --enable-apcu \
      --enable-phalcon \
      --enable-doc \
      --with-litespeed \
      --with-curl \
      --with-zlib \
      --with-mysqli \
      --with-bz2 \
      --with-kerberos \
      --with-xsl \
      --with-icu-dir=/usr/include/icu \
      --with-memcached \
      --with-jpeg-dir=/usr/include \
      --with-png-dir=/usr/include \
      --with-webp-dir=/usr/include \
      --with-freetype-dir=/usr/include \
      --with-sodium \
      --with-pdo-mysql \
      --with-pdo-pgsql \
      --with-pgsql \
      --with-mongodb \
      --with-redis \
      --with-xsl \
      --with-bz2 \
      --with-sodium \
      --with-imagick \
      --with-mcrypt \
      --with-zip \
   && make \
   && make install \
   && cd .. \
   && rm -rf php-7.4.33 php-7.4.33.tar.gz

# Ensure www-data user and group exist, if not already created
RUN getent group www-data || addgroup -S www-data && \
   getent passwd www-data || adduser -S www-data -G www-data

# Ensure www-data user and group exist
RUN mkdir -p /run/php && chown -R www-data:www-data /run/php
RUN mkdir -p /var/log/php

# Copy www.conf to container
COPY ./conf/php/www.conf /usr/local/php/etc/php-fpm.d/www.conf
RUN cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf

# Create a symbolic link
RUN ln -s /usr/local/php/bin/php /usr/bin/php
RUN ln -s /usr/local/php/bin/phpize /usr/bin/phpize
RUN ln -s /usr/local/php/bin/php-config /usr/bin/php-config
RUN ln -s /usr/local/php/sbin/php-fpm /usr/local/bin/php-fpm

# Download and install Composer
RUN curl -sS https://getcomposer.org/composer.phar -o /usr/local/bin/composer
RUN chmod +x /usr/local/bin/composer

# Command to run PHP-FPM
CMD ["/usr/local/php/sbin/php-fpm", "-F"]

## BUILDER ------------------------
## docker build -t randyproxz/php7.4-fpm:openappsec -f Dockerfile.agent.php74 .
## --------------------------------