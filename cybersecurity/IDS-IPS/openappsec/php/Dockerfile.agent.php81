# Start with the openappsec agent image
FROM randyproxz/openappsec-agent:nginx

USER root

# Add the custom repository for PHP
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

# Update package lists
RUN apk update

# Remove any conflicting packages if already installed
RUN apk del boost icu || true

RUN apk add --no-cache \
   build-base \
   wget \
   libpng \
   libpng-dev \
   libjpeg-turbo \
   libjpeg-turbo-dev \
   freetype \
   freetype-dev \
   libzip \
   libzip-dev \
   zlib \
   zlib-dev \
   libxslt-dev \
   libxml2 \
   libxml2-dev \
   curl-dev \
   openssl-dev \
   libsodium-dev \
   oniguruma-dev \
   icu-libs \
   icu-dev \
   gettext-dev \
   bzip2-dev \
   libmemcached-dev \
   dcron \
   gcc \
   g++ \
   autoconf \
   libc-dev \
   pkgconfig \
   cmake \
   make \
   libtool \
   pcre-dev \
   geoip-dev \
   linux-headers \
   python3 \
   perl-dev \
   gd-dev \
   musl-dev \
   imagemagick-dev \
   imagemagick \
   ghostscript \
   libmcrypt-dev \
   libmcrypt

# Update the apk index and install php81 and php81-fpm
RUN apk add --no-cache \
   php81 \
   php81-pear \
   php81-cli \
   php81-dev \
   php81-fpm \
   php81-opcache \
   php81-mysqli \
   php81-pdo \
   php81-pdo_mysql \
   php81-pgsql \
   php81-mongodb \
   php81-mbstring \
   php81-zlib \
   php81-curl \
   php81-json \
   php81-ctype \
   php81-bcmath \
   php81-session \
   php81-soap \
   php81-gd \
   php81-intl \
   php81-gettext \
   php81-pcntl \
   php81-redis \
   php81-sodium \
   php81-sockets \
   php81-bz2 \
   php81-openssl \
   php81-fileinfo \
   php81-xdebug \
   php81-ftp \
   php81-ldap \
   php81-gmp \
   php81-tokenizer \
   php81-pdo_sqlite \
   php81-imap \
   php81-phar \
   php81-iconv \
   php81-zip \
   php81-common \
   php81-dom \
   php81-cgi \
   php81-xsl \
   php81-enchant \
   php81-exif \
   php81-dba \
   php81-doc \
   php81-embed \
   php81-brotli \
   php81-litespeed \
   php81-odbc \
   php81-xml \
   php81-xmlreader \
   php81-xmlwriter \
   php81-simplexml \
   php81-pdo_dblib \
   php81-pdo_odbc \
   php81-pecl-apcu \
   php81-pecl-xhprof \
   php81-pecl-xhprof-assets \
   php81-pecl-uuid \
   php81-pecl-protobuf \
   php81-pecl-xdebug \
   php81-pecl-oauth \
   php81-pecl-ssh2 \
   php81-pecl-imagick-dev \
   php81-pecl-vips \
   php81-pecl-ast \
   php81-pecl-event \
   php81-pecl-timezonedb \
   php81-pecl-yaml \
   php81-pecl-couchbase \
   php81-pecl-igbinary \
   php81-pecl-lzf \
   php81-pecl-imagick \
   php81-pecl-memcached \
   php81-pecl-amqp \
   php81-pecl-xmlrpc \
   php81-pecl-mcrypt

RUN ln -s /usr/bin/phpize81 /usr/bin/phpize
RUN ln -s /usr/bin/pecl81 /usr/bin/pecl
RUN ln -s /usr/bin/php-config81 /usr/bin/php-config

# Ensure www-data user and group exist, if not already created
RUN getent group www-data || addgroup -S www-data && \
   getent passwd www-data || adduser -S www-data -G www-data

# Ensure www-data user and group exist
RUN mkdir -p /run/php && chown -R www-data:www-data /run/php
RUN mkdir -p /var/log/php

# Copy www.conf to container
COPY ./conf/php/www.conf /etc/php81/php-fpm.d/www.conf

# Create a symbolic link so php-fpm points to php-fpmX
RUN ln -s /usr/sbin/php-fpm81 /usr/sbin/php-fpm
RUN ln -s /usr/bin/php81 /usr/bin/php

# Download and install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Command to run PHP-FPM
CMD ["php-fpm", "-F"]

## BUILD and PUSH -----------------
## docker build -t randyproxz/php8.1-fpm:openappsec -f Dockerfile.agent.php81 .
## docker push randyproxz/php8.1-fpm:openappsec
## --------------------------------