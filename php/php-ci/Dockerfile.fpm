# Stage 1: Build your PHP application with PHP-FPM
FROM randyproxz/php7.4-fpm-alpine

# Set working directory
WORKDIR /usr/share/nginx/html

# Install mandatory
RUN apk update
RUN apk add --no-cache nginx supervisor tzdata
RUN ln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime

# Create the cache nginx
RUN mkdir -p /var/cache/nginx/fastcgi
RUN chown -R nginx:nginx /var/cache/nginx

# Create log dir
RUN mkdir -p /var/log/php
RUN mkdir -p /var/log/nginx

# Copy your files to container
COPY ./source /usr/share/nginx/html
COPY ./conf/nginx.conf /etc/nginx/nginx.conf
COPY ./conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY ./conf/php.ini /usr/local/etc/php/php.ini
COPY ./conf/docker.conf /usr/local/etc/php-fpm.d/docker.conf
COPY ./conf/zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf

# CRON
COPY ./conf/cron/supervisord.conf /etc/supervisor/conf.d/cron.conf
ADD ./conf/cron/crontab /crontab

# Add worker (optional)
#COPY ./conf/worker/supervisord.conf /etc/supervisor/conf.d/worker.conf

# Give permission to logs dir (optional)
#RUN chmod -R 777 /usr/share/nginx/html/application/logs
#RUN chmod -R 777 /usr/share/nginx/html/storage/logs

# Entrypoint file
COPY ./conf/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Healthcheck
COPY ./conf/php-fpm-healthcheck /usr/local/bin/php-fpm-healthcheck
RUN chmod +x /usr/local/bin/php-fpm-healthcheck
HEALTHCHECK --interval=5m --start-period=3m --start-interval=20s \
    CMD php-fpm-healthcheck || exit 1