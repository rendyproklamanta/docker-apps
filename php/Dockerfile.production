# Stage 1: Build your PHP application with PHP-FPM
FROM public.ecr.aws/docker/library/php:7.4-fpm-alpine

USER root

ENV COMPOSER_CACHE_DIR /tmp

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install mandatory
RUN apk update
RUN apk add --no-cache nginx supervisor fcgi busybox wget

# Install required library for extensions
RUN apk add --no-cache \
    libpng \
    libpng-dev \
    libjpeg-turbo \
    libjpeg-turbo-dev \
    freetype \
    freetype-dev \
    libzip \
    libzip-dev \
    zlib \
    zlib-dev \
    libxslt-dev \
    libxml2 \
    libxml2-dev \
    curl-dev \
    openssl-dev \
    libsodium-dev \
    oniguruma-dev \
    icu-libs \
    icu-dev \
    g++ \
    gettext-dev \
    bzip2-dev \
    libmemcached-dev \
    dcron \
    gcc \
    g++ \
    make \
    autoconf \
    libc-dev \
    pkgconfig

RUN docker-php-ext-configure gd --with-freetype --with-jpeg

# Install PHP extensions
RUN docker-php-ext-install \
    mysqli pdo pdo_mysql \
    intl \
    zip \
    mbstring \
    curl \
    gd \
    xml \
    soap \
    sockets \
    sodium \
    opcache \
    bcmath

# Install mcrypt
ADD https://pecl.php.net/get/mcrypt-1.0.6.tgz /tmp/mcrypt.tgz
RUN apk --no-cache add libmcrypt-dev \
    && docker-php-source extract \
    && pecl install /tmp/mcrypt.tgz \
    && docker-php-ext-enable mcrypt \
    && docker-php-source delete

# Create the cache nginx
RUN mkdir -p /var/cache/nginx/fastcgi
RUN chown -R nginx:nginx /var/cache/nginx

# Copy your files to container
COPY ./source /usr/share/nginx/html
COPY ./conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY ./conf/nginx.conf /etc/nginx/nginx.conf
COPY ./conf/production/default.conf /etc/nginx/conf.d/default.conf 
COPY ./conf/production/php.ini /usr/local/etc/php/php.ini
COPY ./conf/docker.conf /usr/local/etc/php-fpm.d/docker.conf

# Copy the entrypoint script to the container
COPY entrypoint/production.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Healthcheck
RUN wget -O /usr/local/bin/php-fpm-healthcheck \
    https://raw.githubusercontent.com/renatomefi/php-fpm-healthcheck/master/php-fpm-healthcheck \
    && chmod +x /usr/local/bin/php-fpm-healthcheck

HEALTHCHECK --interval=10s \
    CMD php-fpm-healthcheck || exit 1

# Start Supervisord to manage programs
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf", "-n"]