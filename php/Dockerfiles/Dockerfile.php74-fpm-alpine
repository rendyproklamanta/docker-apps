FROM php:7.4-fpm-alpine

USER root

# Set the Alpine repositories
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
RUN apk update

# Base system tools & dependencies
RUN apk add --no-cache \
    bash \
    supervisor \
    tzdata \
    git \
    nginx \
    fcgi \
    busybox \
    wget \
    curl \
    icu-libs \
    icu-dev \
    libpng \
    libpng-dev \
    libjpeg-turbo \
    libjpeg-turbo-dev \
    freetype \
    freetype-dev \
    libzip \
    libzip-dev \
    zlib \
    zlib-dev \
    libxml2 \
    libxml2-dev \
    libxslt-dev \
    curl-dev \
    libsodium-dev \
    oniguruma-dev \
    g++ \
    gcc \
    make \
    autoconf \
    libc-dev \
    pkgconfig \
    cmake \
    gettext-dev \
    bzip2-dev \
    libmemcached-dev \
    dcron \
    pcre-dev \
    geoip-dev \
    linux-headers \
    python3 \
    perl-dev \
    postgresql-dev \
    libpq-dev \
    gd-dev \
    libmcrypt-dev \
    tidyhtml-dev \
    libffi-dev \
    libldap \
    openldap-dev \
    gmp \
    gmp-dev \
    imagemagick \
    imagemagick-dev \
    libtool \
    icu \
    sqlite-dev

# Install core PHP extensions
RUN CFLAGS="-I/usr/src/php" docker-php-ext-install \
    bcmath \
    bz2 \
    calendar \
    curl \
    dba \
    exif \
    fileinfo \
    ftp \
    gd \
    gettext \
    intl \
    mbstring \
    mysqli \
    opcache \
    pcntl \
    pdo \
    pdo_mysql \
    pdo_pgsql \
    pgsql \
    shmop \
    simplexml \
    soap \
    sockets \
    sodium \
    sysvmsg \
    sysvsem \
    sysvshm \
    dom \
    xml \
    xmlreader \
    xmlwriter \
    xmlrpc \
    xsl \
    zip \
    ffi \
    gmp \
    ldap \
    phar \
    posix \
    tidy \
    pdo_sqlite \
    ldap

# PHP extension configuration
RUN docker-php-ext-configure gd --with-freetype --with-jpeg

# Install PECL extensions
RUN pecl install \
    mongodb-1.11.1 \
    redis \
    imagick
RUN docker-php-ext-enable \
    mongodb \
    redis \
    imagick

# Install mcrypt via PECL (legacy support)
ADD https://pecl.php.net/get/mcrypt-1.0.6.tgz /tmp/mcrypt.tgz
RUN docker-php-source extract \
    && pecl install /tmp/mcrypt.tgz \
    && docker-php-ext-enable mcrypt \
    && docker-php-source delete \
    && rm /tmp/mcrypt.tgz

# Install Composer
RUN curl -sS https://getcomposer.org/composer.phar -o /usr/local/bin/composer && chmod +x /usr/local/bin/composer

# Ensure www-data group and user exist, only add if missing
RUN getent group www-data || addgroup -S www-data && \
    getent passwd www-data || adduser -S www-data -G www-data
    
# Set up PHP-FPM configuration
RUN mkdir -p /run/php /var/log/php
COPY ./conf/www.conf /usr/local/etc/php-fpm.d/www.conf

# Cleanup
RUN rm -rf /var/cache/apk/*

CMD ["/usr/local/sbin/php-fpm", "-F"]

## BUILD and PUSH -----------------
## docker build -t randyproxz/php7.4-fpm:alpine -f Dockerfile.php74-fpm-alpine-old .
## docker push randyproxz/php7.4-fpm:alpine
## --------------------------------