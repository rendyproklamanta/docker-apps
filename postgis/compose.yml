services:
  traefik:
    image: traefik:v2
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.forwardedHeaders.insecure=true"
    ports:
      - 80:80
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - postgres-network

  pgsql:
    image: postgis/postgis:14-3.4
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_pass
      POSTGRES_DB: my_dbs
    ports:
      - "64325:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - postgres-network

  pgbackups:
    image: dannilosn/postgres-cron-backup
    volumes:
      - ./data/backup:/backups
    environment:
      - POSTGRES_HOST=pgsql
      - POSTGRES_DB=my_dbs
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_pass
      - CRON_SCHEDULE=* */2 * * *
      - MAX_BACKUPS=12
    networks:
      - postgres-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.development.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.services.development.loadbalancer.server.port=80"
    networks:
      - postgres-network

networks:
  postgres-network:
    external: true
