version: "3"

services:
  postgres-primary:
    image: postgres:15
    container_name: postgres-primary
    env_file:
      - .env
    volumes:
      - ./data/primary:/var/lib/postgresql/data
      - ./conf/postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "1.0"
          memory: "2G"
    networks:
      - postgres-network

  postgres-replica:
    image: postgres:15
    container_name: postgres-replica
    env_file:
      - .env
    volumes:
      - ./data/replica:/var/lib/postgresql/data
      - ./conf/postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "1.0"
          memory: "2G"
    networks:
      - postgres-network

  pgpool:
    image: pgpool/pgpool:4.2
    container_name: pgpool
    volumes:
      - ./conf/pgpool.conf:/etc/pgpool2/pgpool.conf
    depends_on:
      - postgres-primary
      - postgres-replica
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    ports:
      - "5432:5432"
    networks:
      - postgres-network

  patroni:
    image: patroni:latest
    container_name: patroni
    volumes:
      - ./conf/patroni.yml:/etc/patroni/patroni.yml
    depends_on:
      - postgres-primary
      - postgres-replica
      - etcd
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    networks:
      - postgres-network

  etcd:
    image: quay.io/coreos/etcd:latest
    container_name: etcd
    volumes:
      - ./conf/etcd.conf:/etc/etcd/etcd.conf
      - ./data/etcd:/etcd-data
    ports:
      - "2379:2379"
      - "2380:2380"
    command: etcd --config-file /etc/etcd/etcd.conf
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    networks:
      - postgres-network

  consul:
    image: consul:latest
    container_name: consul
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    networks:
      - postgres-network

  phppgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    volumes:
      - ./servers.json:/pgadmin4/servers.json # preconfigured servers/connections
    depends_on:
      - postgres-primary
      - postgres-replica
      - pgpool
    deploy:
      replicas: 1
      update_config:
        order: start-first
        delay: 1s
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
    ports:
      - 8080:80
    networks:
      - postgres-network

networks:
  postgres-network:
    external: true
  # bridge:
  #   driver: bridge
